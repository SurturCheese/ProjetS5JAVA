package projetS5;

import java.util.Arrays;

public class Map {

	// case vide (0), mur (1), pellet (2), pellet violet (3), pellet orange (4),
	// pellet vert (5), spawnPacman (6), spawnGhost (7), wrap around (8)
	private int hauteur;
	private int longueur;
	private String type;
	public static final String DEFAULT = "DEFAULT";
	public static final String GOOGLE = "GOOGLE";
	private int spawnPacmanX;
	private int spawnPacmanY;
	private int spawnGhostX;
	private int spawnGhostY;
	public int[] teleportA;
	public int[] teleportB;
	private final int[][] googleMap = { { 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1 },
			{ 1, 2, 2, 4, 2, 1, 1, 1, 0, 1, 1, 1, 2, 2, 2, 3, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 5, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 7, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 6, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1 },
			{ 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1 },
			{ 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 4, 2, 1, 1, 1, 0, 1, 1, 1, 2, 2, 2, 3, 1 },
			{ 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1 } };
	private final int[][] defaultMap = {
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
			{ 1, 2, 2, 4, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 2, 1 },
			{ 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1 },
			{ 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1 },
			{ 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1 },
			{ 1, 2, 2, 5, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 2, 3, 1, 1, 2, 2, 2, 2, 1 },
			{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }, };

	public Map(String type) {
		this.type = type;
		if (type.equals(DEFAULT)) {
			this.hauteur = defaultMap[0].length;
			this.longueur = defaultMap.length;
		}
		if (type.equals(GOOGLE)) {
			this.hauteur = googleMap[0].length;
			this.longueur = googleMap.length;
		}
		this.teleportA = new int[2];
		this.teleportB = new int[2];
		setMapInfo();
	}

	public int getHauteur() {
		return hauteur;
	}

	public int getLongueur() {
		return longueur;
	}

	public String getType() {
		return type;
	}

	public int getSpawnPacmanX() {
		return spawnPacmanX;
	}

	public int getSpawnPacmanY() {
		return spawnPacmanY;
	}

	public int getSpawnGhostX() {
		return spawnGhostX;
	}

	public int getSpawnGhostY() {
		return spawnGhostY;
	}

	public int[][] getMap() {
		if (type.equals(DEFAULT))
			return defaultMap;
		else
			return googleMap;
	}

	public void setMapInfo() {
		int[][] tempMap = getMap();
		boolean premier = true;
		for (int i = 0; i < tempMap.length; i++) {
			for (int j = 0; j < tempMap[i].length; j++) {
				if (tempMap[i][j] == 6) {
					spawnPacmanX = i;
					spawnPacmanY = j;
				}
				if (tempMap[i][j] == 7) {
					spawnGhostX = i;
					spawnGhostY = j;
				}
				if (tempMap[i][j] == 8 && premier) {
					this.teleportA[0] = i;
					this.teleportA[1] = j;
					premier = false;
				} else if (tempMap[i][j] == 8 && !premier) {
					this.teleportB[0] = i;
					this.teleportB[1] = j;
				}
			}
		}
	}

	public int[] getTeleportPoint(int posX, int posY) {
		if (Arrays.equals(new int[] { posX, posY }, teleportA))
			return teleportB;
		else
			return teleportA;
	}

	public void swapMap() {
		if (type.equals(GOOGLE)) {
			hauteur = defaultMap[0].length;
			longueur = defaultMap.length;
			type = DEFAULT;
		} else if (type.equals(DEFAULT)) {
			hauteur = googleMap[0].length;
			longueur = googleMap.length;
			type = GOOGLE;
		}
		setMapInfo();
	}
}